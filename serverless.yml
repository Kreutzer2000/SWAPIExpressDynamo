service: SWAPIExpressDynamo
org: rdipaolaj
app: swapi-express-dynamo
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  stage: ${opt:stage, 'prod'}  # Default to 'prod' if no stage is specified
  environment:
    USERS_TABLE: ${self:custom.usersTable.${self:provider.stage}}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:ListTables
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        Fn::Join:
          - ''
          - - 'arn:aws:dynamodb:'
            - Ref: AWS::Region
            - ':'
            - Ref: AWS::AccountId
            - ':table/'
            - ${self:provider.environment.USERS_TABLE}

custom:
  usersTable:
    dev: "users-table-dev"
    prod: "users-table-prod"

functions:
  api:
    handler: build/index.handler  # Update this line to point to the compiled JS file
    events:
      - httpApi:
          path: /docs
          method: any
      - httpApi:
          path: /users/{userId}
          method: get
      - httpApi:
          path: /users
          method: post
      - httpApi:
          path: /swapi/people/{id}
          method: get

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.USERS_TABLE}
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

plugins:
  - serverless-offline
